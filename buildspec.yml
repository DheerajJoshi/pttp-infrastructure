version: 0.2

env:
  variables:
    TF_IN_AUTOMATION: true
    TF_INPUT: 0
    TF_VAR_owner_email: pttp@justice.gov.uk
  parameter-store:
    TF_VAR_enable_peering:     "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/enable_peering"
    TF_VAR_assume_role:        "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/assume_role"
    TF_VAR_logging_cidr_block: "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/logging_cidr_block"
    TF_VAR_ost_vpc_id:         "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/ost_vpc_id"
    TF_VAR_ost_aws_account_id: "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/ost_aws_account_id"
    TF_VAR_ost_vpc_cidr_block: "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/ost_vpc_cidr_block"
    TF_VAR_ost_username:       "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/ost_username"
    TF_VAR_ost_password:       "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/ost_password"
    TF_VAR_ost_url:            "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/ost_url"
    # function beats related config
    ROLE_ARN:                  "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/assume_role"
    OST_KEY:                   "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/moj.key"
    OST_CRT:                   "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/moj.crt"
    OST_CA_CRT:                "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/elk-ca.crt"

phases:
  install:
    commands:
      - wget --no-verbose -O terraform.zip https://releases.hashicorp.com/terraform/0.12.28/terraform_0.12.28_linux_amd64.zip
      - unzip terraform.zip
      - mv terraform /bin
      - wget --no-verbose -O functionbeat.tar.gz https://artifacts.elastic.co/downloads/beats/functionbeat/functionbeat-7.8.0-linux-x86_64.tar.gz
      - tar -xzf functionbeat.tar.gz
      - mv functionbeat-*-linux-x86_64 functionbeat

  build:
    commands:
      # terraform deploy
      - terraform init -no-color --backend-config="key=terraform.$ENV.state"
      - terraform workspace new $ENV || true
      - terraform workspace select $ENV
      - terraform plan -no-color
      - terraform apply --auto-approve -no-color
      # functionbeat setup
      - cd functionbeat
      - echo $OST_KEY    | base64 -d > moj.key
      - echo $OST_CRT    | base64 -d > moj.crt
      - echo $OST_CA_CRT | base64 -d > elk-ca.crt
      - ./functionbeat -e -c ../functionbeat-config.yml test config
      # functionbeat deploy
      - TEMP_ROLE=`aws sts assume-role --role-arn $ROLE_ARN --role-session-name ci-build-$CODEBUILD_BUILD_NUMBER`
      - export TEMP_ROLE
      - echo $TEMP_ROLE
      - export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')
      - export AWS_DEFAULT_REGION=eu-west-2
      - export AWS_REGION=eu-west-2
      - aws s3api head-bucket --bucket  pttp-development-infra-functionbeat-artifacts # this is the first cmd functionbeats calls
      - cat ../functionbeat-config.yml
      - echo $AWS_ACCESS_KEY_ID
      - AWS_DEFAULT_REGION=eu-west-2 AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY ./functionbeat -e -d "*" -c ../functionbeat-config.yml deploy pttp-$ENV-infra-cloudwatch pttp-$ENV-infra-sqs
